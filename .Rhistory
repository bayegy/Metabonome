character(0)
class(character(0))
character(0) == "0"
yield_combine <- function(vec){
vec <- sort(vec)
out_list <- list()
index <- 1
for(i in 2:length(vec)){
sub_com <- combn(vec, i)
for(j in 1:ncol(sub_com)){
out_list[[index]] <- sub_com[, j]
index = index +1
}
}
return(out_list)
}
yield_combine(c(1,2,3))
l1=yield_combine(c(1,2,3))
l1
for(i in l1){print(i)}
paste(c("a", "b"))
paste(**c("a", "b"))
paste(*c("a", "b"))
reduce(c("A","B"), paste, sep="_and_")
library(purrr)
reduce(c("A","B"), paste, sep="_and_")
library(VennDiagram)
help("venn.diagram")
l <- list(a=1, b=2, c=99)
l[[c("a","b")]]
l[["a"]]
l[["b"]]
l[[c("a", "b")]]
l
l[[c(T,F,F)]]
l[c(T,F,F)]
l[c("a", "b")]
l <- list()
l[[a]] = 1
l[["a"]] = 1
l[["b"]] = 88
l
l
length(l)
length(NULL)
library("MetaboAnalystR")
install.packages("MetaboAnalystR")
install.packages("pacman")
install.packages("pacman")
